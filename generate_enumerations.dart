/// Generate enumerations.dart.
import 'dart:io';

import 'package:dart_style/dart_style.dart';

void main() {
  final enumerationsFile = File('lib/src/enumerations.dart');
  final bindingsFile = File('lib/src/lua_bindings.dart');
  final types = <String, String>{};
  const typePrefix = 'const int LUA_T';
  for (final line in bindingsFile.readAsLinesSync()) {
    if (line.startsWith(typePrefix)) {
      final value = line.substring(typePrefix.length).split(' = ');
      final typeName = value.first.toLowerCase();
      var typeValue = value.last;
      typeValue = typeValue.substring(0, typeValue.indexOf(';'));
      if (typeName != 'otaltypes') {
        types[typeName] = typeValue;
      }
    }
  }
  final stringBuffer = StringBuffer()
    ..writeln('/// Enumerations used by the package.')
    ..writeln('///')
    ..writeln('/// Automatically generated by `generate_enumerations.dart.')
    ..writeln("import 'error.dart';")
    ..writeln('/// Possible Lua types.')
    ..writeln('enum LuaType {');
  for (final entry in types.entries) {
    final name = entry.key;
    final value = entry.value;
    stringBuffer
      ..writeln('/// LUA_T${name.toUpperCase()} = $value.')
      ..writeln('$name,');
  }
  stringBuffer
    ..writeln('}')
    ..writeln('/// An extension for converting between Dart and C values.')
    ..writeln('extension LuaTypeToInt on LuaType {')
    ..writeln('/// Return an integer.')
    ..writeln('int toInt() {')
    ..writeln('switch(this) {');
  for (final entry in types.entries) {
    final name = entry.key;
    final value = entry.value;
    stringBuffer
      ..writeln('case LuaType.$name:')
      ..writeln('return $value;');
  }
  stringBuffer
    ..writeln('}}}/// An extension for converting between C and Dart values.')
    ..writeln('extension IntToLuaType on int {')
    ..writeln('/// Return a Lua type.')
    ..write('LuaType toLuaType() {')
    ..writeln('switch(this) {');
  for (final entry in types.entries) {
    final name = entry.key;
    final value = entry.value;
    stringBuffer
      ..writeln('case $value:')
      ..writeln('return LuaType.$name;');
  }
  stringBuffer
    ..writeln('default:')
    ..writeln("throw LuaError(this, 'Unknown Lua type.');")
    ..writeln('}}}');
  final formatter = DartFormatter();
  final code = formatter.format(stringBuffer.toString());
  enumerationsFile.writeAsStringSync(code);
}
